name: Docker build images, push to DockerHub and redeploy containers

on:
  push:
    branches: [ "*" ]

env:
  APP_NAME: app
  API_NAME: api
  DOCKERHUB_REPOSITORY_NAME: my-workout
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
  SERVER_PORT: ${{ secrets.SERVER_PORT }}

jobs:
  build-push-images:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Build images app and api
        run: |
          docker build -t  ${{ env.DOCKERHUB_REPOSITORY_NAME }}:app -f apps/${{ env.APP_NAME }}/Dockerfile .
          docker build -t  ${{ env.DOCKERHUB_REPOSITORY_NAME }}:api -f apps/${{ env.API_NAME }}/Dockerfile .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY_NAME }}

      - name: Push image app
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: apps/${{ env.APP_NAME }}/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY_NAME }}:app

      - name: Push image api
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: apps/${{ env.API_NAME }}/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY_NAME }}:api

  redeploy-containers:
    needs: build-push-images
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          password: ${{ env.SERVER_PASSWORD }}
          port: ${{ env.SERVER_PORT }}
          script: |
            docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY_NAME }}:app
            docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY_NAME }}:api
            docker system prune -f
            cd /home/debian/apps/${{ env.DOCKERHUB_REPOSITORY_NAME }}/
            docker-compose up -d
